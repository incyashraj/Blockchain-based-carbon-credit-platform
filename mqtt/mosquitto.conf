# Mosquitto MQTT Broker Configuration for Carbon Credits System
# =============================================================

# General Configuration
# ---------------------
pid_file /var/run/mosquitto.pid
user mosquitto
max_inflight_messages 20
max_queued_messages 100
message_size_limit 0

# Persistence
# -----------
persistence true
persistence_location /mosquitto/data/
persistence_file mosquitto.db
autosave_interval 300
autosave_on_changes false

# Logging
# -------
log_dest file /mosquitto/log/mosquitto.log
log_type error
log_type warning
log_type notice
log_type information
log_type debug
log_timestamp true
connection_messages true

# Network Configuration
# ---------------------
# MQTT Protocol (Port 1883)
listener 1883 0.0.0.0
protocol mqtt

# WebSockets (Port 9001) - for web browser connections
listener 9001 0.0.0.0
protocol websockets

# Security Configuration
# ----------------------
# For development - allow anonymous connections
allow_anonymous true

# For production - uncomment these lines and create password file
# allow_anonymous false
# password_file /mosquitto/config/passwd
# acl_file /mosquitto/config/acl

# Connection limits
max_connections -1
max_keepalive 65535

# Quality of Service
# ------------------
max_inflight_messages 20
max_queued_messages 100
queue_qos0_messages false
retain_available true
set_tcp_nodelay true
sys_interval 10

# Topic Configuration for Carbon Credits IoT System
# --------------------------------------------------
# IoT sensors will publish to: sensors/{sensor_id}/{metric}
# Example topics:
#   - sensors/co2_001/readings
#   - sensors/co2_002/status  
#   - sensors/temp_001/readings
#   - verification/requests
#   - verification/responses
#   - blockchain/transactions

# Bridge Configuration (for external MQTT brokers if needed)
# ----------------------------------------------------------
# connection bridge-01
# address external-mqtt-broker.example.com:1883
# topic sensors/# out 0
# topic verification/# in 0

# Websockets Configuration for Frontend Integration
# -------------------------------------------------
# This allows the React frontend to connect via WebSocket
# and subscribe to real-time sensor data updates

# Performance Tuning
# ------------------
# Buffer sizes
sys_interval 10
store_clean_interval 10
keepalive_interval 60

# Memory optimization for IoT devices
max_inflight_messages 10
max_queued_messages 50

# Topic specific configurations
# ----------------------------
# For high-frequency sensor data
max_queued_messages 1000

# Health Check Configuration
# --------------------------
# Enable $SYS topics for monitoring
sys_interval 10