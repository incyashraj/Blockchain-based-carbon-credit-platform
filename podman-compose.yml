# Podman Compose for Carbon Credits Blockchain System
# Enhanced for 2025 with Podman's rootless, daemonless architecture
version: '3.8'

services:
  # MongoDB Database - Enhanced Security
  mongodb:
    image: docker.io/mongo:8.0
    container_name: carbon-credits-db
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    read_only: false
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db:Z
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro,Z
    environment:
      - MONGO_INITDB_DATABASE=carbon_credits
    networks:
      - carbon-credits-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
    user: "999:999"  # MongoDB user for rootless

  # Redis Cache - Rootless Configuration
  redis:
    image: docker.io/redis:7-alpine
    container_name: carbon-credits-cache
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data:Z
    networks:
      - carbon-credits-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3
    user: "999:999"  # Redis user for rootless

  # MQTT Broker - Enhanced for IoT
  mosquitto:
    image: docker.io/eclipse-mosquitto:2.0
    container_name: carbon-credits-mqtt
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mqtt/mosquitto.conf:/mosquitto/config/mosquitto.conf:ro,Z
      - mqtt_data:/mosquitto/data:Z
      - mqtt_logs:/mosquitto/log:Z
    networks:
      - carbon-credits-network
    healthcheck:
      test: ["CMD-SHELL", "mosquitto_pub -h localhost -t health -m 'check' || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3

  # Polygon Enhanced Blockchain Node
  blockchain-node:
    build:
      context: .
      target: blockchain-node
    image: localhost/carbon-credits-blockchain:latest
    container_name: carbon-credits-blockchain
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    ports:
      - "8545:8545"
    volumes:
      - ./deployments:/app/deployments:Z
      - blockchain_data:/app/cache:Z
    environment:
      - NODE_ENV=development
      - NETWORK=polygon
      - AGGLAYER_ENABLED=true
      - CDK_VERSION=2.0
    networks:
      - carbon-credits-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8545 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API Server - Polygon Enhanced
  backend:
    build:
      context: .
      target: backend
    image: localhost/carbon-credits-backend:latest
    container_name: carbon-credits-backend
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    ports:
      - "3000:3000"
    volumes:
      - ./deployments:/app/deployments:Z
      - ./logs:/app/logs:Z
    environment:
      - NODE_ENV=production
      - BLOCKCHAIN_NETWORK=polygon
      - POLYGON_RPC_URL=https://polygon-rpc.com
      - AGGLAYER_RPC_URL=https://agglayer-rpc.polygon.technology
      - MONGODB_URI=mongodb://mongodb:27017/carbon_credits
      - REDIS_URL=redis://redis:6379
      - MQTT_BROKER=mosquitto
      - MQTT_PORT=1883
      - NATIVE_TOKEN=POL
      - ZKEVM_TYPE=1
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
      mosquitto:
        condition: service_healthy
      blockchain-node:
        condition: service_healthy
    networks:
      - carbon-credits-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # AI Verification Service - Enhanced Security
  ai-verification:
    build:
      context: .
      target: ai-service
    image: localhost/carbon-credits-ai:latest
    container_name: carbon-credits-ai
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
    ports:
      - "5000:5000"
    volumes:
      - ./ai-verification/models:/app/models:ro,Z
      - ./ai-verification/training/data:/app/training/data:ro,Z
      - ./logs:/app/logs:Z
    environment:
      - FLASK_ENV=production
      - MODEL_PATH=/app/models
      - TRAINING_DATA_PATH=/app/training/data
      - VERIFICATION_THRESHOLD=0.9
    networks:
      - carbon-credits-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Application - Enhanced Nginx
  frontend:
    build:
      context: .
      target: frontend-prod
    image: localhost/carbon-credits-frontend:latest
    container_name: carbon-credits-frontend
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /var/cache/nginx
      - /var/run
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/ssl:/etc/nginx/ssl:ro,Z
    depends_on:
      - backend
    networks:
      - carbon-credits-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3

  # IoT Sensor Simulation - Enhanced for Polygon
  iot-simulation:
    build:
      context: .
      target: iot-service
    image: localhost/carbon-credits-iot:latest
    container_name: carbon-credits-iot
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
    environment:
      - MQTT_BROKER=mosquitto
      - MQTT_PORT=1883
      - SIMULATION_SENSORS=10
      - DATA_INTERVAL=15
      - BLOCKCHAIN_NETWORK=polygon
      - AGGLAYER_ENABLED=true
    depends_on:
      mosquitto:
        condition: service_healthy
    networks:
      - carbon-credits-network

  # Enhanced Load Balancer with Security
  nginx-lb:
    image: docker.io/nginx:alpine
    container_name: carbon-credits-nginx
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /var/cache/nginx
      - /var/run
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./nginx/nginx-lb.conf:/etc/nginx/nginx.conf:ro,Z
      - ./nginx/ssl:/etc/nginx/ssl:ro,Z
      - ./logs/nginx:/var/log/nginx:Z
    depends_on:
      - backend
      - frontend
    networks:
      - carbon-credits-network

  # Enhanced Monitoring Stack
  prometheus:
    image: docker.io/prom/prometheus:latest
    container_name: carbon-credits-prometheus
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    user: "65534:65534"  # nobody user
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro,Z
      - prometheus_data:/prometheus:Z
    networks:
      - carbon-credits-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'

  grafana:
    image: docker.io/grafana/grafana:latest
    container_name: carbon-credits-grafana
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    user: "472:472"  # grafana user
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana:Z
      - ./monitoring/grafana:/etc/grafana/provisioning:ro,Z
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=carbon_credits_admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SECURITY_DISABLE_GRAVATAR=true
    depends_on:
      - prometheus
    networks:
      - carbon-credits-network

# Enhanced Volume Configuration for Podman
volumes:
  mongodb_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/mongodb
  redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/redis
  mqtt_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/mqtt
  mqtt_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./logs/mqtt
  blockchain_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/blockchain
  prometheus_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/prometheus
  grafana_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/grafana

# Enhanced Network Configuration
networks:
  carbon-credits-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br-carbon-credits
    ipam:
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1